{"version":3,"sources":["components/FormSection.tsx","components/CurrentResults.tsx","components/Calculator.tsx","components/ListSection.tsx","hooks/useViewport.ts","App.tsx","hooks/usePersistedState.ts","index.tsx"],"names":["FormSection","children","StyledForm","styled","div","CurrentResults","props","className","pricePerSqIn","toFixed","totalPrice","pricePerSlice","areaOfPizza","diameter","radius","totalPizzaArea","size","numberOfPizzas","unitPrice","slicesPerPizza","Calculator","React","pizzaSize","setPizzaSize","pizzaPrice","setPizzaPrice","pizzaQuantity","setPizzaQuantity","pizzaSlices","setPizzaSlices","generateId","Math","random","toString","substr","onSubmit","event","preventDefault","type","name","id","value","onChange","e","handleSize","target","handlePrice","handleQuantity","handleSlices","onClick","console","log","newBuild","Number","slices","totalArea","updateList","toggleList","ListSection","renderListItems","list","map","item","ListItem","key","quantity","removeBuild","removePizzaBuild","StyledList","length","StyledPlaceholder","useViewport","window","innerWidth","width","setWidth","handleWindowResize","addEventListener","removeEventListener","App","showList","setShowList","defaultValue","storage","localStorage","useState","cachedValue","getItem","JSON","parse","err","setValue","useEffect","valueStr","stringify","setItem","usePersistedState","pizzaList","setPizzaList","StyledApp","newPizzaBuild","concat","filter","t","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.f7740866.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function FormSection({ children }) {\r\n  return <StyledForm>{children}</StyledForm>;\r\n}\r\n\r\nconst StyledForm = styled.div`\r\n  background: #337357;\r\n  flex: 1 0 40%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .current-wrapper {\r\n    padding: 20px;\r\n    color: white;\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    .label {\r\n      font-size: 1.2em;\r\n    }\r\n    .result {\r\n      font-weight: bold;\r\n      font-size: 3em;\r\n    }\r\n  }\r\n  .form-wrapper {\r\n    background: #171a21ff;\r\n    flex: 1.5;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    .form-item {\r\n      margin-bottom: 10px;\r\n      input {\r\n        /* background: #68b684ff;\r\n        color: white; */\r\n        width: 100%;\r\n        border-radius: 10px;\r\n        outline: none;\r\n        border: none;\r\n        padding: 10px 20px;\r\n        font-size: 1.2em;\r\n        &:focus,\r\n        &:active {\r\n          outline: none;\r\n        }\r\n      }\r\n      input::-webkit-outer-spin-button,\r\n      input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n      }\r\n    }\r\n    .footer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      /* margin-top:15px; */\r\n      /* margin-bottom: 20px; */\r\n      padding: 5px 0 5px;\r\n      button {\r\n        color: white;\r\n        border: none;\r\n        outline: none;\r\n        font-size: 1.2em;\r\n        padding: 10px 20px;\r\n        border-radius: 10px;\r\n        flex: 1;\r\n        &:hover {\r\n          opacity: 0.8;\r\n        }\r\n      }\r\n      .save-btn {\r\n        background: #db504aff;\r\n        flex: 3;\r\n        margin-right: 15px;\r\n        @media screen and (min-width: 600px) {\r\n          margin-right: 0;\r\n        }\r\n      }\r\n      .view-list-btn {\r\n        background: #68b684ff;\r\n        @media screen and (min-width: 600px) {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\n\r\nexport default function CurrentResults(props: CurrentResultsProps) {\r\n\treturn (\r\n\t\t<div className=\"current-wrapper\">\r\n\t\t\t<div className=\"current-value\">\r\n\t\t\t\t<div className=\"label\">Price Per Sq Inch</div>\r\n\t\t\t\t<div className=\"result\">${props.pricePerSqIn.toFixed(2)}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"current-value\">\r\n\t\t\t\t<div className=\"label\">Total Cost</div>\r\n\t\t\t\t<div className=\"result\">${props.totalPrice.toFixed(2)}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"current-value\">\r\n\t\t\t\t<div className=\"label\">Price Per Slice</div>\r\n\t\t\t\t<div className=\"result\">${props.pricePerSlice.toFixed(2)}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport interface CurrentResultsProps {\r\n\tpricePerSqIn: number;\r\n\ttotalPrice: number;\r\n\tpricePerSlice: number;\r\n}\r\n","import * as React from \"react\";\r\nimport CurrentResults from \"./CurrentResults\";\r\n\r\n// Pizza Utilities\r\n//area of 1 pizza in sq.in\r\nconst areaOfPizza = diameter => {\r\n  let radius = diameter / 2;\r\n  let pi = 3.14;\r\n  let area = pi * (radius * radius);\r\n  return area;\r\n};\r\n\r\n//area of total pizza count\r\nconst totalPizzaArea = (size, numberOfPizzas) => {\r\n  return areaOfPizza(size) * numberOfPizzas;\r\n};\r\n//price per sq inch\r\nconst pricePerSqIn = (unitPrice, totalPizzaArea, numberOfPizzas) => {\r\n  return (unitPrice * numberOfPizzas) / totalPizzaArea;\r\n};\r\n//price per slice\r\nconst pricePerSlice = (unitPrice, slicesPerPizza) => {\r\n  return unitPrice / slicesPerPizza;\r\n};\r\n// total cost\r\nconst totalPrice = (unitPrice, numberOfPizzas) => {\r\n  return unitPrice * numberOfPizzas;\r\n};\r\n\r\nexport default function Calculator(props) {\r\n  const [pizzaSize, setPizzaSize] = React.useState(18);\r\n  const [pizzaPrice, setPizzaPrice] = React.useState(0);\r\n  const [pizzaQuantity, setPizzaQuantity] = React.useState(1);\r\n  const [pizzaSlices, setPizzaSlices] = React.useState(6);\r\n\r\n  const handleSize = e => {\r\n    setPizzaSize(e);\r\n  };\r\n\r\n  const handlePrice = e => {\r\n    setPizzaPrice(e);\r\n  };\r\n\r\n  const handleQuantity = e => {\r\n    setPizzaQuantity(e);\r\n  };\r\n\r\n  const handleSlices = e => {\r\n    setPizzaSlices(e);\r\n  };\r\n\r\n  function generateId() {\r\n    return (\r\n      \"_\" +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9)\r\n    );\r\n  }\r\n\r\n  //resetForm\r\n\r\n  const buildPizza = () => {\r\n    console.log(\"Generate ID: \", generateId());\r\n    let newBuild = {\r\n      id: generateId(),\r\n      size: Number(pizzaSize),\r\n      unitPrice: Number(pizzaPrice),\r\n      numberOfPizzas: Number(pizzaQuantity),\r\n      slices: Number(pizzaSlices),\r\n      areaOfPizza: areaOfPizza(pizzaSize),\r\n      totalArea: totalPizzaArea(pizzaSize, pizzaQuantity),\r\n      pricePerSqIn: pricePerSqIn(\r\n        pizzaPrice,\r\n        totalPizzaArea(pizzaSize, pizzaQuantity),\r\n        pizzaQuantity\r\n      ),\r\n      pricePerSlice: pricePerSlice(pizzaPrice, pizzaSlices),\r\n      totalPrice: totalPrice(pizzaPrice, pizzaQuantity)\r\n    };\r\n    props.updateList(newBuild);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CurrentResults\r\n        pricePerSqIn={pricePerSqIn(\r\n          pizzaPrice,\r\n          totalPizzaArea(pizzaSize, pizzaQuantity),\r\n          pizzaQuantity\r\n        )}\r\n        totalPrice={totalPrice(pizzaPrice, pizzaQuantity)}\r\n        pricePerSlice={pricePerSlice(pizzaPrice, pizzaSlices)}\r\n      />\r\n      <form onSubmit={handleSubmit} className=\"form-wrapper\">\r\n        <div className=\"form-item\">\r\n          <div className=\"label\">Pizza Size</div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"pizza-size\"\r\n            id=\"pizza-size\"\r\n            value={pizzaSize}\r\n            onChange={e => handleSize(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <div className=\"label\">Unit Price</div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price-per-unit\"\r\n            id=\"price-per-unit\"\r\n            value={pizzaPrice}\r\n            onChange={e => handlePrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <div className=\"label\">Number of Pizzas</div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            id=\"quantity\"\r\n            value={pizzaQuantity}\r\n            onChange={e => handleQuantity(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-item\">\r\n          <div className=\"label\">Number of Slices</div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"number-slices\"\r\n            id=\"number-slices\"\r\n            value={pizzaSlices}\r\n            // onChange={e => handleSlices(e.target.value)}\r\n            onChange={e => handleSlices(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button className=\"save-btn\" onClick={buildPizza}>\r\n            Save\r\n          </button>\r\n          <button className=\"view-list-btn\" onClick={props.toggleList}>\r\n            List\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function ListSection(props) {\r\n\tconst showPlaceHolder = () => {\r\n\t\treturn (\r\n\t\t\t<StyledPlaceholder>\r\n\t\t\t\t<h3>Save your pizza builds here</h3>\r\n\t\t\t</StyledPlaceholder>\r\n\t\t);\r\n\t};\r\n\tconst renderListContent = () => {\r\n\t\tif (!props.list.length) {\r\n\t\t\treturn showPlaceHolder();\r\n\t\t} else {\r\n\t\t\treturn renderListItems();\r\n\t\t}\r\n\t};\r\n\tconst renderListItems = () => {\r\n\t\tconsole.log(\"props\", props);\r\n\t\treturn props.list.map((item) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ListItem\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\tpricePerSqIn={item.pricePerSqIn}\r\n\t\t\t\t\tpricePerSlice={item.pricePerSlice}\r\n\t\t\t\t\ttotalPrice={item.totalPrice}\r\n\t\t\t\t\tunitPrice={item.unitPrice}\r\n\t\t\t\t\tquantity={item.numberOfPizzas}\r\n\t\t\t\t\tpizzaSize={item.size}\r\n\t\t\t\t\tslicesPerPizza={item.slices}\r\n\t\t\t\t\tremoveBuild={props.removePizzaBuild}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledList className=\"compare-screen\">\r\n\t\t\t<ul className=\"compare-list\">{renderListContent()}</ul>\r\n\t\t\t<div className=\"footer\">\r\n\t\t\t\t<button onClick={props.toggleList}>Close</button>\r\n\t\t\t</div>\r\n\t\t</StyledList>\r\n\t);\r\n}\r\n\r\nfunction ListItem(props: ListItemProps) {\r\n\treturn (\r\n\t\t<li className=\"list-item\">\r\n\t\t\t<div className=\"main-stats\">\r\n\t\t\t\t<div className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Price Per Sq Inch</div>\r\n\t\t\t\t\t<div className=\"value\">${props.pricePerSqIn.toFixed(2)}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Price per Slice</div>\r\n\t\t\t\t\t<div className=\"value\">${props.pricePerSlice.toFixed(2)}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"secondary-stats\">\r\n\t\t\t\t<li className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Total Cost:</div>\r\n\t\t\t\t\t<div className=\"value\">${props.totalPrice.toFixed(2)}</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Unit Price:</div>\r\n\t\t\t\t\t<div className=\"value\">${props.unitPrice.toFixed(2)}</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Quantiy:</div>\r\n\t\t\t\t\t<div className=\"value\">{props.quantity}</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Pizza Size:</div>\r\n\t\t\t\t\t<div className=\"value\">{props.pizzaSize}\"</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"value-wrapper\">\r\n\t\t\t\t\t<div className=\"label\">Slices per Pizza:</div>\r\n\t\t\t\t\t<div className=\"value\">{props.slicesPerPizza}</div>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<button className=\"remove-item-btn\" onClick={() => props.removeBuild(props.id)}>\r\n\t\t\t\tX\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport interface ListItemProps {\r\n\tid: string;\r\n\tpricePerSqIn: number;\r\n\tpricePerSlice: number;\r\n\ttotalPrice: number;\r\n\tunitPrice: number;\r\n\tquantity: number;\r\n\tpizzaSize: number;\r\n\tslicesPerPizza: number;\r\n\tremoveBuild: (id: string) => void;\r\n}\r\n\r\nconst StyledList = styled.div`\r\n\tbackground: #68b684ff;\r\n\tpadding: 20px;\r\n\tflex: 1 2 645px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t.compare-list {\r\n\t\tmargin: 0;\r\n\t\tlist-style: none;\r\n\t\tpadding: 0;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100%;\r\n\t\toverflow-y: auto;\r\n\t\t&::-webkit-scrollbar {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\t.footer {\r\n\t\t@media screen and (min-width: 600px) {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\tdisplay: flex;\r\n\t\t/* display: none; */\r\n\t\tjustify-content: center;\r\n\t\tmargin-top: 15px;\r\n\t\tbutton {\r\n\t\t\tbackground: #617073ff;\r\n\t\t\tcolor: white;\r\n\t\t\tborder: none;\r\n\t\t\toutline: none;\r\n\t\t\tfont-size: 1.2em;\r\n\t\t\tpadding: 10px 20px;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\tflex: 1;\r\n\t\t\t&:hover {\r\n\t\t\t\topacity: 0.8;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.list-item {\r\n\t\tflex: 0 0 140px;\r\n\t\tmax-height: 170px;\r\n\t\tbackground: white;\r\n\t\toverflow: hidden;\r\n\t\tmargin: 5px;\r\n\t\tborder-radius: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tjustify-content: space-around;\r\n\t\t.main-stats {\r\n\t\t\tpadding: 10px 15px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex: 1;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: center;\r\n\t\t\t.label {\r\n\t\t\t\tfont-size: 0.9em;\r\n\t\t\t}\r\n\t\t\t.value {\r\n\t\t\t\tfont-size: 1.8em;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.secondary-stats {\r\n\t\t\tpadding: 10px 5px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex: 1;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: center;\r\n\t\t\tlist-style: disc;\r\n\t\t\tmargin-right: 20px;\r\n\t\t\t.value-wrapper {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\t\t\t}\r\n\t\t\t.label {\r\n\t\t\t\tfont-size: 0.9em;\r\n\t\t\t\tmargin-right: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.remove-item-btn {\r\n\t\t\tbackground: none;\r\n\t\t\tborder: none;\r\n\t\t\toutline: none;\r\n\t\t\tcolor: lightgray;\r\n\t\t\tpadding: 12px;\r\n\t\t\tfont-weight: bold;\r\n\t\t\tfont-size: 1.5em;\r\n\t\t\t&:active,\r\n\t\t\t&:focus {\r\n\t\t\t\toutline: none;\r\n\t\t\t}\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground: #db504aff;\r\n\t\t\t\tcolor: white;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst StyledPlaceholder = styled.div`\r\n\tcolor: #171a21ff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\talign-items: center;\r\n\th3 {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n","import * as React from \"react\";\r\n\r\nconst useViewport = () => {\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n\r\n  // Return the width so we can use it in our components\r\n  return width;\r\n};\r\n\r\nexport default useViewport;\r\n","import * as React from \"react\";\r\nimport FormSection from \"./components/FormSection\";\r\nimport Calculator from \"./components/Calculator\";\r\nimport ListSection from \"./components/ListSection\";\r\nimport useViewport from \"./hooks/useViewport\";\r\nimport usePersistedState from \"./hooks/usePersistedState\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface PizzaBuildState {\r\n\tid: string;\r\n\tsize: number;\r\n\tunitPrice: number;\r\n\tnumberOfPizzas: number;\r\n\tslices: number;\r\n\tareaOfPizza: number;\r\n\ttotalArea: number;\r\n\tpricePerSqIn: number;\r\n\tpricePerSlice: number;\r\n\ttotalPrice: number;\r\n}\r\n\r\nexport default function App() {\r\n\tconst [showList, setShowList] = React.useState(false);\r\n\tconst [pizzaList, setPizzaList] = usePersistedState<PizzaBuildState[]>([], \"PizzaList\");\r\n\tconsole.log(\"PizzaList: \", pizzaList);\r\n\tconst width = useViewport();\r\n\t// TODO: setup good mobile breakpoint\r\n\tconst mobile = 600;\r\n\r\n\tlet addPizzaBuild = (newPizzaBuild) => {\r\n\t\tsetPizzaList((pizzaList) => pizzaList.concat(newPizzaBuild));\r\n\t};\r\n\r\n\tlet removePizzaBuild = (id) => {\r\n\t\tsetPizzaList((pizzaList) => pizzaList.filter((t) => t.id !== id));\r\n\t};\r\n\r\n\tlet toggleList = () => setShowList(!showList);\r\n\r\n\treturn (\r\n\t\t<StyledApp>\r\n\t\t\t{(!showList || width > mobile) && (\r\n\t\t\t\t<FormSection>\r\n\t\t\t\t\t<Calculator updateList={addPizzaBuild} toggleList={toggleList} />\r\n\t\t\t\t</FormSection>\r\n\t\t\t)}\r\n\t\t\t{(showList || width > mobile) && (\r\n\t\t\t\t<ListSection list={pizzaList} removePizzaBuild={removePizzaBuild} toggleList={toggleList} />\r\n\t\t\t)}\r\n\t\t</StyledApp>\r\n\t);\r\n}\r\n\r\nconst StyledApp = styled.div`\r\n\tbackground-color: #617073ff;\r\n\tdisplay: flex;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\toverflow: hidden;\r\n\t@media screen and (min-width: 600px) {\r\n\t\twidth: auto;\r\n\t\theight: 704px;\r\n\t\tborder-radius: 20px;\r\n\t}\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function usePersistedState<T>(defaultValue: T, key: string, storage = window.localStorage) {\r\n\tlet [value, setValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\tlet cachedValue = storage.getItem(key);\r\n\t\t\tif (!cachedValue) return defaultValue;\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.parse(cachedValue);\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// Unable to parse the JSON, must be a string?\r\n\t\t\t\treturn cachedValue;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlet valueStr = typeof value === \"string\" ? value : JSON.stringify(value);\r\n\t\tstorage.setItem(key, valueStr);\r\n\t}, [key, value]);\r\n\r\n\treturn [value, setValue];\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./styles.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}